import hashlib
import pefile
import os
import time

def calculate_md5(file_path):
    hash_md5 = hashlib.md5()
    with open(file_path, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_md5.update(chunk)
    return hash_md5.hexdigest()

def calculate_sha256(file_path):
    hash_sha256 = hashlib.sha256()
    with open(file_path, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_sha256.update(chunk)
    return hash_sha256.hexdigest()

known_malware_hashes = {
    "ff3e29fdfafa0e9030e2fcd71489d41d": "Malware A",
    "ca29e8d8eca84f6f1b39e0bad771752cebf86d7754c20b69c77ab641a9ac2767": "Malware B"
}

def compare_hashes(file_path):
    md5_hash = calculate_md5(file_path)
    sha256_hash = calculate_sha256(file_path)

    if md5_hash in known_malware_hashes:
        print(f"WARNING: File is flagged as {known_malware_hashes[md5_hash]} (MD5)")
    elif sha256_hash in known_malware_hashes:
        print(f"WARNING: File is flagged as {known_malware_hashes[sha256_hash]} (SHA-256)")
    else:
        print("File is not in the known malware database.")

    return md5_hash, sha256_hash

def simulate_file_execution(file_path):
    print(f"Simulating execution of {file_path}...")
    operations = [
        f"File created: {file_path}.temp",
        f"File modified: {file_path}",
        f"File deleted: {file_path}.temp"
    ]
    
    with open("behavior_log.txt", "w") as log_file:
        for operation in operations:
            log_file.write(f"{time.ctime()}: {operation}\n")
            print(operation)
            time.sleep(1) 

def analyze_pe(file_path):
    pe = pefile.PE(file_path)

    suspicious_sections = []
    for section in pe.sections:
        entropy = section.get_entropy()
        if entropy > 7:
            suspicious_sections.append((section.Name.decode().strip(), entropy))
    
    return suspicious_sections

def generate_report(file_path):
    md5_hash, sha256_hash = compare_hashes(file_path)

    simulate_file_execution(file_path)

    suspicious_sections = analyze_pe(file_path)

    with open("malware_report.txt", "w") as report_file:
        report_file.write(f"Malware Detection Report for {file_path}\n")
        report_file.write("="*50 + "\n")
        report_file.write(f"MD5: {md5_hash}\n")
        report_file.write(f"SHA-256: {sha256_hash}\n")
        report_file.write("\nPE Analysis:\n")
        if suspicious_sections:
            report_file.write("\nSuspicious Sections Detected:\n")
            for name, entropy in suspicious_sections:
                report_file.write(f"Section: {name}, Entropy: {entropy}\n")
        else:
            report_file.write("\nNo suspicious sections detected.\n")

file_path = "C:\\Windows\\System32\\notepad.exe"

generate_report(file_path)
